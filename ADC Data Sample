#include <stdbool.h>
#include <stdint.h>
#include "inc/hw_ints.h"
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/gpio.h"
#include "driverlib/interrupt.h"
#include "driverlib/sysctl.h"
#include "driverlib/systick.h"
#include "utils/uartstdio.h"
#include "utils/ustdlib.h"
#include "driverlib/pin_map.h"
#include "driverlib/adc.h"

uint32_t ADCData[8];
int flag = 1;

void StdioInit()
{
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
	SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);

	GPIOPinConfigure(GPIO_PA0_U0RX);
	GPIOPinConfigure(GPIO_PA1_U0TX);
	GPIOPinTypeUART(GPIO_PORTA_BASE, GPIO_PIN_0 | GPIO_PIN_1);

	UARTStdioConfig(0, 115200, 25000000);
}

void ADCDataGet()
{

	ADCIntClear(ADC0_BASE, 0);
	ADCSequenceDataGet(ADC0_BASE, 0, ADCData);
	flag = 1;



	//ADCIntEnable(ADC0_BASE, 0);

}


//***********************ADC Initialise **********************


void ADCInit()
{
	/*Enable ADC Peripheral*/
	SysCtlPeripheralEnable(SYSCTL_PERIPH_ADC0);
	int a = SYSCTL_PERIPH_ADC0;
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOE);

	GPIOPinTypeADC(GPIO_PORTE_BASE, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 );

	/*Configure ADC Peripheral*/
	ADCSequenceDisable(ADC0_BASE, 0); //Before Configuring ADC Sequencer 1, it should be OFF
	ADCClockConfigSet(ADC0_BASE, ADC_CLOCK_SRC_PIOSC| ADC_CLOCK_RATE_HALF, 1);
	/*Configure ADC Sequence*/
	ADCSequenceConfigure(ADC0_BASE, 0, ADC_TRIGGER_ALWAYS, 0);
	ADCSequenceStepConfigure(ADC0_BASE, 0, 0, ADC_CTL_CH3); //Sequencer Step 0
	ADCSequenceStepConfigure(ADC0_BASE, 0, 1, ADC_CTL_CH2); //Sequencer Step 1
	ADCSequenceStepConfigure(ADC0_BASE, 0, 2, ADC_CTL_CH1); //Sequencer Step 2
	ADCSequenceStepConfigure(ADC0_BASE, 0, 3, ADC_CTL_CH0| ADC_CTL_IE |ADC_CTL_END); //Sequencer Step 3

	/*Enable ADC sequence*/

	ADCSequenceEnable(ADC0_BASE, 0);
	ADCIntDisable(ADC0_BASE, 0);

	ADCIntRegister(ADC0_BASE, 0, ADCDataGet );

	/*Clear ADC Interrupt*/
	ADCIntClear(ADC0_BASE, 0);
	ADCIntEnable(ADC0_BASE, 0);
	IntMasterEnable();

}

void main()
{

	SysCtlClockSet(SYSCTL_SYSDIV_4 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN |
            SYSCTL_XTAL_25MHZ);

	StdioInit();
	ADCInit();

	UARTprintf("Channel 1");

	while (1)
	{
		if (flag == 1)
		{

			UARTprintf("%d\n", ADCData);
			flag = 0;
		}
	}


}
